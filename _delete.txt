---
layout: default
title:  "Webを支える技術を読みました"
categories: other
---


<p>Webを支える技術という本を読みたいと思っていました。</p>

<p>=> 金欠だから本は買えない => 図書館で借りよう => 返したら内容忘れるじゃん => ざっくりと残しておこう</p>

<p>というわけで書きます。<br/>
4章構成だけど半分ちょっとまでしかしっかり読んでません。<br/>
いつものようにひどい文章 &amp; 雑な内容です。</p>

<hr />

<h2>Web概論</h2>

<p>webの特徴とか歴史とかを説明していておもしろかった。<br/>
WebはRESTスタイルで作られてる。<br/>
- クライアント/サーバー<br/>
- ステートレスサーバ<br/>
  - Cookieはこのスタイルからはズレてる<br/>
- キャッシュ<br/>
- 統一インターフェース<br/>
- 階層化システム<br/>
- コードオンデマンド<br/>
  - jsとかダウンロードしてクライアントで実行</p>

<p>P2Pとかはこれじゃないスタイル。P2Pなにもわかんないけど。</p>

<h2>URI</h2>

<pre class="code" data-lang="" data-unlink>http://username:password@hostname:8000/path?q=query&amp;qq=subquery#idname  </pre>


<p>が全部詰め込んだ感じのURI<br/>
場合によっては相対パスの書き方もOK<br/>
htmlなら<code>&lt;head&gt;</code>の<code>&lt;base&gt;</code>にベースURIを書く。<br/>
％エンコーディングで、普通はUTF8から変換したもの。<br/>
2038byteまでらしい。URLだけでサービス提供してみたのqiitaの記事で書いてあった気がする。<br/>
uriではリソースの<strong>名詞</strong>を表すものにすべしらしい。<br/>
はてなのサービスのURLはきれいらしい。</p>

<h2>HTTP</h2>

<p>アプリケーション層<br/>
80番port<br/>
今はHTTP/1.1なのかHTTP/2なのかわからない。<br/>
2010年版だから2について書いてない…</p>

<p>相対URI指定するならHostヘッダにHostを書く</p>

<p>メソッドは少し。getとpostしか知らない。<br/>
post使えば何でもできるけど、Webの考えに反してるからダメらしい。サーバー側で具体的にメソッドをどう使っているのかが気になる。<br/>
ツイ消しとかのHTTPメソッドがDeleteなのかも気になる。</p>

<p>postはURI指定なしで中身を送るのに対して、putはURIまで指定して中身を送ってる。postに対してのレスポンスのlocationヘッダに作られたリソースのURLがはいってる。</p>

<p><code>_method</code>パラメータを<strong>フォーム</strong>で指定すると、postで疑似deleteが表現できるらしい。<code>Content-Type: application/x-www-form-urlencoded</code>がヘッダに入る。この方法はrailsで採用されてる。<br/>
<del>ならtwitterはrailsらしいしツイ消しもpostなのね</del> 調べてみたらrailsじゃないっぽい？</p>

<p>フォーム以外の内容をpostで他のメソッド扱いとして送るときは、<br/>
<code>X-HTTP-Method-Override: PUT</code>のようにする。</p>

<p>レスポンスコードたち↓</p>

<ul>
<li>200 OK</li>
<li>201 Created</li>
<li>301 Moved Pernanentky

<ul>
<li>Locationヘッダに新URLが入る</li>
</ul>
</li>
<li>303 See Other

<ul>
<li>別のところからこのリソースは取れるよ</li>
</ul>
</li>
<li>400 Bad Request</li>
<li>401 Unauthorized

<ul>
<li>ヘッダで認証方式これ使えって言われる</li>
</ul>
</li>
<li>404 Not Found</li>
<li>500 Internal Server Error</li>
<li>503 Service Unavailable

<ul>
<li>Reetry-After ヘッダに秒数が書かれてるかも</li>
</ul>
</li>
</ul>


<p>Content-Typeヘッダ<br/>
タイプ/サブタイプ形式で、xmlには+xmlと付ける</p>

<ul>
<li>text

<ul>
<li>text/plain</li>
<li>text/csv</li>
<li>text/css</li>
<li>text/html</li>
<li>text/xml</li>
</ul>
</li>
<li>image

<ul>
<li>image/jpg</li>
<li>image/gif</li>
</ul>
</li>
<li>application

<ul>
<li>application/xml+xml</li>
<li>application/xhtml+xml</li>
<li>application/atom+xml</li>
<li>application/json</li>
<li>application/javascript</li>
</ul>
</li>
<li>audio</li>
<li>video</li>
<li>Accept

<ul>
<li>qパラメータで優先度指定できる。</li>
<li>サーバーが非対応なら406が返る</li>
</ul>
</li>
</ul>


<p>認証</p>

<ul>
<li>basic

<ul>
<li>IDとパスワードほぼ直送り</li>
</ul>
</li>
<li>Digest

<ol>
<li>まずテキトーに送って、401 Unauthorizedが返る</li>
<li>レスポンスのヘッダ内のnonce(number used once)の値を使う</li>
<li>nonce + username + password でハッシュ化する</li>
<li>それを送って認証完了</li>
</ol>
</li>
<li>WSSE

<ol>
<li>自分で決めたnonce, 日時情報, password でhashを作る</li>
<li>hash, nonce, 日時情報 , username を送る</li>
<li>サーバーがそのnonceと日時情報から、保管してあるユーザーのパスワードについてhashを計算して、送られてきたhashと一致すれば認証OK</li>
</ol>
</li>
</ul>


<p>キャッシュ<br/>
キャッシュ使うな！だったり、いついつまで使ってOK！だったりをレスポンスヘッダに書く。<br/>
いついつにGETしたリソースは持ってるよってのをリクエストに含めて無駄をなくす方法がある。<br/>
Connection: close で持続的接続になる。<br/>
サーバーのレスポンスを待たずにリクエストを送れる。</p>

<h2>ハイパーメディアフォーマット</h2>

<p>htmlとかについて。ここらへんから雑に読んだ。<br/>
xhtmlだったりAtom形式だったり、複数のxml形式を使うときは「名前空間」を指定してあげる。<br/>
<code>xmlns:接頭辞="名前空間名"</code>の書き方。<code>xmls:atom="http://www.w3.org/2005/Atom"</code>なかんじらしい。よく分かってない。<br/>
html書いたことないから要素とか全然わからない。<br/>
form要素でgetやpostでのリクエストを送れる。</p>

<p>microformatsという、リソースの意味を書くのがある。<br/>
要素への意味とかの書き方とかを統一して便利に。というもの。<br/>
Atom形式とかがそれ。<br/>
AtomPubという、リソースのCRUDを定義したやつある。</p>

<p>JSON<br/>
JSONPというものを利用すると、クロスドメイン通信ができる。<br/>
他のサーバーからなにか持ってきてそれを使える。<br/>
危険な感じがするけど、大丈夫。<br/>
JSONPに対応してあるサーバーのリソースからしかデータをとれないから、変なことは起きない。<br/>
javascriptをコールバックする形式でデータを送る必要がある。ので、大丈夫。<br/>
文での説明むずかしい。</p>

<h2>Webサービスの設計</h2>

<p>しっかり読んでないからまあいいや</p>

<hr />

<h1>終わりに</h1>

<p>おわりです</p>


---
layout: default
title:  "ミニ水槽の作り方"

---

<p>作りたい水槽によって必要なものは違うので一概には言えません。</p>

<p>〜おわり〜
<br><br><br><br><br><br><br><br><br></p>

<p>ではなくて、自分がこの間買った水槽セットがよかったのでそれを紹介します。</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B07F3Q1P29/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/41heXEI26fL._SL160_.jpg" class="hatena-asin-detail-image" alt="ジェックス AQUA-U" title="ジェックス AQUA-U"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B07F3Q1P29/hatena-blog-22/">ジェックス AQUA-U</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>まずはじめに、水槽を始めるには「水槽本体」「照明」「フィルター」が少なくとも必要なのですが、この水槽はそれがセットになっています。特にすごいのが、水槽の中にフィルターが入っている事です。</p>

<p>一般的に売られているフィルター内蔵水槽は、フィルター用のパイプなどを水槽内にセットしなければならなく、見栄えがちょっと良くないです。外側から見たときに水槽器具が見えてしまうのが難点でした。</p>

<p>ですがこの水槽は違います。U字型に水槽が分かれており、右が観賞用ガラス水槽、左が濾過フィルター用不透明水槽になっています。
左側のフィルターと右のガラス水槽の水のやりとりがU字の下の方を通って行われるので、水槽内外がとてもスッキリします。</p>

<p>フィルターの他にも、しっかりしたLED照明も付いてきて嬉しいセットです。</p>

<hr />

<p>これに加えて、底床のソイル（水槽用に固めた土）とレイアウト水槽の準備はOKです。
ソイルはこのサイズなら2kgのを買えば十分で、この商品を買いました。</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00CBXJZF0/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/419GzeyewiL._SL160_.jpg" class="hatena-asin-detail-image" alt="ジェックス ピュアソイル ブラック 2kg" title="ジェックス ピュアソイル ブラック 2kg"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00CBXJZF0/hatena-blog-22/">ジェックス ピュアソイル ブラック 2kg</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>水草の陸地で育ったときの姿）の状態ですでに持っていたものを使いました。</p>

<p>レアな水草や熱帯魚や質のいい水槽用品にこだわらなければ、多分どれも十分手の届く値段のものが売っています。一度買えばそれでOKですし。石や木を買うのに最初に抵抗があるかもですが。</p>

<p>使った水草は以下の５種です。</p>

<p>「水草</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF4BVD6/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/514A5%2BNO%2B-L._SL160_.jpg" class="hatena-asin-detail-image" alt="(水草)アヌビアスナナ(1ポット分) 本州・四国限定[生体]" title="(水草)アヌビアスナナ(1ポット分) 本州・四国限定[生体]"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF4BVD6/hatena-blog-22/">(水草)アヌビアスナナ(1ポット分) 本州・四国限定[生体]</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>「グリーンロタラ  」明るい緑で繁茂させるときれい</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B01M4IM4VB/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/31DONl3GIUL._SL160_.jpg" class="hatena-asin-detail-image" alt="グリーンロタラ　（３０本）　◆人気の緑　有茎草　丈夫◆" title="グリーンロタラ　（３０本）　◆人気の緑　有茎草　丈夫◆"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B01M4IM4VB/hatena-blog-22/">グリーンロタラ　（３０本）　◆人気の緑　有茎草　丈夫◆</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>「水草で、緑の絨毯に</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF44O2Q/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/61cdKIWR6fL._SL160_.jpg" class="hatena-asin-detail-image" alt="(水草)初心者向け説明書付 グロッソスティグマ(水中葉)(無農薬)(1パック分) 本州・四国限定[生体]" title="(水草)初心者向け説明書付 グロッソスティグマ(水中葉)(無農薬)(1パック分) 本州・四国限定[生体]"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF44O2Q/hatena-blog-22/">(水草)初心者向け説明書付 グロッソスティグマ(水中葉)(無農薬)(1パック分) 本州・四国限定[生体]</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>「ブリクサショートリーフ  」細い葉が広がってきれい</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF4AM9U/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/616terMq-KL._SL160_.jpg" class="hatena-asin-detail-image" alt="(水草)ブリクサ ショートリーフ(無農薬)(2株分) 本州・四国限定[生体]" title="(水草)ブリクサ ショートリーフ(無農薬)(2株分) 本州・四国限定[生体]"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF4AM9U/hatena-blog-22/">(水草)ブリクサ ショートリーフ(無農薬)(2株分) 本州・四国限定[生体]</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>「クリプトコリネ」穏やかできれいな葉</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF43N5K/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/613uUohiO3L._SL160_.jpg" class="hatena-asin-detail-image" alt="(水草)クリプトコリネ ウェンティー グリーン(無農薬)(1束分) 本州・四国限定[生体]" title="(水草)クリプトコリネ ウェンティー グリーン(無農薬)(1束分) 本州・四国限定[生体]"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UF43N5K/hatena-blog-22/">(水草)クリプトコリネ ウェンティー グリーン(無農薬)(1束分) 本州・四国限定[生体]</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>水草を選べばこれは要りません。
二酸化炭素の添加は準備に１万円弱くらいかかるかもです。</p>

<p>最後に、気孔石という石を１セット買いました。</p>

<p><div class="hatena-asin-detail"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UDYY6D0/hatena-blog-22/"><img src="https://images-fe.ssl-images-amazon.com/images/I/51IfF1G3xTL._SL160_.jpg" class="hatena-asin-detail-image" alt="カミハタ プチアクアの石 気孔石" title="カミハタ プチアクアの石 気孔石"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="https://www.amazon.co.jp/exec/obidos/ASIN/B00UDYY6D0/hatena-blog-22/">カミハタ プチアクアの石 気孔石</a></p><ul><li><span class="hatena-asin-detail-label">メディア:</span> その他</li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<hr />

<p>それで、作ったのがこんなレイアウトです。</p>

<p>最初作ったほう↓</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331220956.png" alt="f:id:black_neon_tetra:20190331220956p:plain" title="f:id:black_neon_tetra:20190331220956p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>なんかごっちゃりだなあって思って変えたバージョン↓<br/>
少しコケが出てる</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331233319.jpg" alt="f:id:black_neon_tetra:20190331233319j:plain" title="f:id:black_neon_tetra:20190331233319j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>奥行きや立体感がでるようにしてみたつもりですが、なかなか難しいですね。遠くに小さいものを置いたり、斜面をつけたりで奥行き感が出て…出てたら良いです。</p>

<hr />

<p>水槽の管理としては、最初の方は週１くらい、水が安定したら１〜２週に１回水量の半分くらい変えればOKだと思います。魚の数やフィルター次第ですが。</p>

<p>魚は小型魚を数匹くらいが良い気がします。水が安定してから移すのが良いです。
水温が20度あるのでヒーターは使っていません。これも魚によりますが。</p>

<p>水槽の始め方紹介なのかなんなのか分からない記事になってしまいました。</p>

<p>とりあえずこの水槽が上手くいけばOKです。</p>

<hr />

<p>最後に今までの水槽の写真あげて満足して終わりです。（これがしたかっただけ）</p>

<br>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331220534.jpg" alt="f:id:black_neon_tetra:20190331220534j:plain" title="f:id:black_neon_tetra:20190331220534j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331223011.png" alt="f:id:black_neon_tetra:20190331223011p:plain" title="f:id:black_neon_tetra:20190331223011p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331133537.png" alt="f:id:black_neon_tetra:20190331133537p:plain" title="f:id:black_neon_tetra:20190331133537p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331220647.jpg" alt="f:id:black_neon_tetra:20190331220647j:plain" title="f:id:black_neon_tetra:20190331220647j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20190331/20190331220711.jpg" alt="f:id:black_neon_tetra:20190331220711j:plain" title="f:id:black_neon_tetra:20190331220711j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><br><br>

<p>最後まで見てくれてありがとうございました。アクアリウム、おすすめです。</p>

---
layout: default
title:  "アイマスの特に好きな曲30曲"
categories: other
---

好きな曲について本音を言うと、

｢この曲のどこが好きですか？｣

｢うーん、めっちゃ良い〜 な所です！｣

なんですけれど、それじゃあなにも伝わらないでしょということで、好きな曲を紹介していきます。順不同です。

---

でもやっぱり好きなものは好きなので、理由を考えるのは難しいわけです。言葉にできない、つらい。クロースワードのわからないパートは、相手の意図のわからないパズル。繋げて 途切れて 変えて 確かめて、気づく。

.

..

...In The Name Of。...LOVE?

ミリオンライブの真壁瑞希のこの曲です。コーヒーゼリー見るたびに思い出します。
まかべー独特の雰囲気がいいですよね。リズムも好きです。歌い方もいいですね〜
というわけで、好きな曲1曲目でした。

<iframe width="560" height="315" src="https://www.youtube.com/embed/j-3IOaaJb74?start=104" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

ご覧のとおり文章力が皆無なんですけれど、得意不得意は置いておいて、好きなことについて、言葉を紡ぐのは楽しいです。想いをものすのは楽しいんですよね〜
そう、Flowing Freedomです。
ありのままでいいんだよ、みたいな歌の良さに加えて、歌い方も自由な感じで好みです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/ytEn8suY8O0?start=558" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

自由な感じといえば、いや、楽しい感じと言った方が近いかもですが、明るい曲を好きになりがちです。
というわけで、
「Bonnes! Bonnes!! Vacances!!!」
が好きです。
歌詞の始まりから明るく楽しそうな雰囲気がずっと続いて、始終楽しい感じ。これが良いんですよね。
楽しそうにしている雰囲気が好き、が自分のアイマス全般に対しての好きの根底にあると思っているのですが、この曲とかはまさにそれです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/PQnJn7UzYPE" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

バカンスも楽しいですけどお祭りも楽しいですよね？お祭り楽しい。楽しいお祭り。楽しい楽しいお祭り。
「Fun! Fun! Festa!」なんですけど、Beitが祭りのテンションになっている感。曲の始まりの、浮かれている歌詞も良いですね。
祭りの屋台を巡る感じの曲なんですけど、"お祭り感"の上に"Beit感"が加わっている曲だと思っていて、そこも良いと思っています。

<iframe width="560" height="315" src="https://www.youtube.com/embed/KrVK84zIPu8?start=110" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

同じお祭りというか、パーティー的な連想で、シンデレラガールズの、「Yes! Party Time!」も好きな曲です。
わりとソロのパートが多い全体曲みたいに思っていて、自分は多分この系統の曲を好きになりがちです。
曲中で少しずつ、歌い手が交代して続くみたいなやつが好きです。なんじゃそりゃ。
最初聞いた時は曲のオーラについて行けなかったのですが、繰り返し聴くにつれて良い〜になりました。

<iframe width="560" height="315" src="https://www.youtube.com/embed/v5D6bHe8Xfg?start=110" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

パーティーの曲に夜と大人要素を加えるとですね、「MOON NIGHTのせいにして」が思い浮かびますね。
年齢高めの雰囲気を出しつつも、ハイテンションな面もあるのが良いポイントです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/nllPhRkQVxo?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

信号機ユニットの繋がりということで、シャイニーカラーズについてです。イルミネーションスターズの、「We can go now!」がとても好きです。
歌に曲が乗っかる感じではなくて、曲に歌を乗せてる感じがします。

- 歌唱力が特別高い、というタイプの曲ではない所
- 明るい曲だけど、超全力で盛り上がるような箇所は無い所
- 曲のリズムにやや強引さがある所

これらが相まって、聞いてきてリズムに振り回されるような感覚があります。で、これが好きなんです。伝わらないかもしれませんが...
歌詞の前向きさや、信号機ユニットにある個性がはっきり分かれてる良さも勿論好きです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/Ela9WiovqgA?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

はたして信号機ユニットの括りなのかは分かりませんが、シンデレラの「Stage Bye Stage」も好きです。
やっぱりそれぞれの個性が感じられる所や、全体曲によくある過去から未来へ進もう感、仲間がいるよ感と、キラキラ感が好きです。
のちに出た9人versionもとっても良いです。ひとり一言づつ歌っているの所とか最高です。

<iframe width="560" height="315" src="https://www.youtube.com/embed/NMIEAhH_fTU?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

SideMの全体曲の「Beyond The Dream」についてです。全体曲のスター感、ちょっとスピード感、属性ごとに分かれてる所、ユニットごとに分かれてる所、良すぎです。
ユニットごとのパート分けとか、こういうのがとても好きです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/n14b4dlfgbs?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

シンデレラに戻って、デレステの3周年曲、「ガールズインザフロンティア」です。
かっこいい曲ですよね。強い前向き感があるのが好きです。
｢自分の足で進め シンデレラ｣の所とかが特にそれです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/kiFcPyfWCCY?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

かっこいい系、クール系の流れで、「咲いてJewel」もお気に入り曲です。
クールかつスピードがある曲を好みがちなのかもしれません。曲そのものに加えて、歌ってるユニットもぴったりだと思っています。
デレステを初めて最初の、つまりアイマスに触れて最初のイベントだったこともあり、そういう個人的な思いもあります。

<iframe width="560" height="315" src="https://www.youtube.com/embed/Q0hHBlkHlUY?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

もうひとつシンデレラのクール曲で、「未完成の歴史」も好みです。
堂々としたかっこよさが良いのはもちろんのこと、その中に優しい雰囲気も入っている所が良いのかも、と思っています。
曲を聞いていて何に惹かれたかを考えることは普段しないですけど、こうして曲のどこに惹かれているのか考えると発見がありますね。

<iframe width="560" height="315" src="https://www.youtube.com/embed/ME_OWi3PjLY?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

かっこいい系の方向を変えて、SideMのWORLD TRE@SUREシリーズの、「Baile Apasionado」がまた違ったカッコ良さで良いのです。
スペイン風の曲調も良くて、あとは歌詞もそんな感じで良くて、途中挟まる掛け声(合いの手)も良いです。格好良い赤色系〜〜！って感じが強くて好きです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/SV91t2mcC5A?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

SideMのカッコ良くて好きな曲としてもうひとつ、「RAY OF LIGHT」があります。
いや本当にカッコよくて、最初抑え気味のカッコ良さから、その後の爆発させたカッコ良さがとても良いです。
公式の試聴動画がめっちゃ長いのもありがたくて、買うまで試聴を繰り返してた思い出があります。

<iframe width="560" height="315" src="https://www.youtube.com/embed/f_4I0_ejbdQ?start=220" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

180度方向を変えて、シンデレラガールズのP.C.Sのユニット曲、「ラブレター」についてです。
キュート成分に全部振った感じの曲で、楽しげな雰囲気も相まって好みです。
それにしても自分、3人前後のユニット曲を好きになりがちらしいですね。
デレステのMVがこの曲から急激にハイレベルになって、軽く衝撃だった記憶があります。

<iframe width="560" height="315" src="https://www.youtube.com/embed/wayBBPAQPaA?start=220" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

キュートに全部振った曲ということで、シンデレラガールズのソロ曲、「Cherry Merry Cherry」についてです。
キュート感全振りが良いですね。引っ込みがちだけれども自分を信じていこう、な感じが良いです。
聴いていて脳がとろけますみたいな感想を見た事あるんですけど、その通りですね。

<iframe width="560" height="315" src="https://www.youtube.com/embed/6jeZ1yqM508?start=220" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

キュート曲だけど真っ直ぐ感もあって好きな曲があって、「Heart Voice」です。
勇気を出して頑張ろう！、何かが見えてくるかも、な歌詞が良いですよね。歌詞が間を置かずに次々に来る所とかも良いです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/WWo_z7dwKYA?start=220" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

純キュートから少し離れて、楽しげな、でも歌詞はちょっと寂しげな、「ゲキテキ！ムテキ！恋したい!」も好きな曲です。
古い気持ちはおしまいで、新しい気持ちで仕切り直そう！な歌詞、リズム、歌い方が良いです。
韻を踏んでる歌詞、｢徹底的! 消去履歴! サヨナラしましょう〜｣のようなのが多いのも良いですね。

<iframe width="560" height="315" src="https://www.youtube.com/embed/XH3wsgghivc?start=220" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

対照的に落ち着きのある好きな曲に、「初恋バタフライ」があります。
リズムはゆったりしているけれども、しっかりと、まっすぐと歌っている感じが良いです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/Cf_06f1GvTw?start=103" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

同じ宮尾美也ソロ曲の、「ハッピーエフェクト」もよく聞く曲です。
｢そうやってればいつだって、世界は平和なんですよ 美味しいお茶を飲みながら のんびり景色眺めましょう｣の所とか、他の歌詞も全部そうなんですけど、この雰囲気が良いです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/ELmWTpuqGOw?start=54" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

雰囲気似た感じのお気に入り曲として、「お散歩カメラ」があります。
この曲も全部好みで、｢手のひらの上にちょこんと乗る幸せを探しに行こう｣の所とか勿論他の所も歌い方も雰囲気もとても良いです。何気ない幸せを大事にしようね、みたいな雰囲気が自分は好きなんだと思っています。

[アイドルマスター｜THE IDOLM@STER CINDERELLA MASTER 021〜025](https://columbia.jp/idolmaster/cinderella/COCC-16778.html#COCC-16782)

<br>

---

<br>

同じく高森藍子ソロ2曲目もお気に入りです。「青空リレーション」です。
お散歩カメラよりもちょっと軽やかな曲調で、なんの楽器かは分からないんですけど音楽も好きです。
自分自身に加えて、自分の周りも幸せになれたらいいね、な感じがより増した曲な気がしています。

<iframe width="560" height="315" src="https://www.youtube.com/embed/stU33SK9vKE" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

今度は明るい曲になりますが、「ランニングハイ」がおすすめです。
ミリオンライブのこのCDの曲は好きな曲ばかりなんですけれど、やっぱりどれも明るい所が良いんですよね。
底抜けに明るくて楽しい曲調がとても良いです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/XH3wsgghivc?start=121" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

明るさが好きなシャイニーカラーズの曲があって、 放課後クライマックスガールズの「太陽キッス」です。
全力で楽しもう！な雰囲気や、韻を踏んでいて聞き心地の良い歌詞も。
ユニットで歌う箇所とソロで歌う箇所が次々切り替わるのも好きなポイントです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/lw5WSonuhHw?start=33" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

ミリオンライブの「Understand? Understand!」も、楽しさとはしゃぐ感じが良くてお気に入りです。
自分に自信を持っている感じ、前へ進め的な感じとかが良いです。
常にハイテンションなリズムも心地よくて、全体的な楽しい!の雰囲気の他に、ステージとかで歌っている感じの強気な雰囲気の箇所が組み合わさっているのが良いのです。元気がもらえる曲ですね。

<iframe width="560" height="315" src="https://www.youtube.com/embed/vcuW6vdJxB0?start=116" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

こちらもテンション高めで、シンデレラの「Wonder goes on!!」です。
4人それぞれが一緒にまとまって歌ってる感じが良いですね。
キラキラしている感じ、全体曲にあるあのイメージが強いと思っています。

<iframe width="560" height="315" src="https://www.youtube.com/embed/mKSQzO_ExDQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

ミリオンライブの「Episode. Tiara」が、王道なお姫様感（表現がわかりずらい）を全面に感じる曲で好みです。
プリンセス感で固めたような、芯をしっかり持っているような曲の雰囲気が良いですね。

<iframe width="560" height="315" src="https://www.youtube.com/embed/eOwx7S0nnN4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

お姫様だったから次は、というわけでもないですが、SideMのBiteの「スマイルエンゲージ」の、王子様感もとても良いです。
歌詞から溢れる、手をとって、こっちにおいで、の感じがすごく良くて、何から何まで素敵な何かに連れていってくれる、な感じがとても良いです。

<iframe width="560" height="315" src="https://www.youtube.com/embed/kE0MG9xwMgQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

どうにも曲紹介の流れに入れるタイミングがなかったのですが、SideMの「315 Steelo!」が何度でも聴けます。
ラップは聴いていて心地よくて、それぞれのソロのパートには個性があって、ちょっとダーク寄りのカッコ良さもあってとても良いです。
何度でも聴ける曲です。

<iframe width="560" height="315" src="https://www.youtube.com/embed/2GukNwiSkEA" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

<br>

---

<br>

最後、「私はアイドル♡」が好みです。
自分の軸を本当に強く持っている感じ、自分のことを強く信じている感じが良いです。

[THE IDOLM@STER MASTERWORKシリーズ 第0弾 私はアイドル?](https://columbia.jp/idolmaster/2007/COZX-239.html)

<br>

---

<br>

### おわりに

アイマスシリーズが集まるらしいバンナムフェスがあるからということで好きな曲をまとめてみたのですが、ひどい文章が出来上がりました。
765ASの曲や、CDに付いているボイスドラマもあまり聞けてないので、これから聞きたいですね。

---
layout: default
title:  "TwitterのBioを集めるWebサービス、Biotterの紹介"
categories: other
---

サークルで、作ったものを紹介する機会がありまして、そのとき作ったスライドを載せておきます。

載せられない所はぼかしています..



![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-0.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-1.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-2.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-3.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-4.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-5.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-6.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-7.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-8.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-9.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-10.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-11.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-12.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-13.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-14.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-15.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-16.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-17.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-18.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-19.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-20.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-21.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-22.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-23.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-24.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-25.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-26.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-27.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-28.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-29.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-30.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-31.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-32.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-33.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-34.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-35.png)
![](/assets/koken_contest_biotter_slide/koken_contest_biotter_slide-36.png)

うーん、深夜のテンションで書いてますねこれ。

サイトはここです。見ていってね。

<p><iframe src="https://hatenablog-parts.com/embed?url=http%3A%2F%2Fbiotter.tetetratra.net%2F" title="Biotter" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="http://biotter.tetetratra.net/">biotter.tetetratra.net</a></cite>


---
layout: default
title:  "Atomで出来たことをNeovimでも出来るようにする"
categories: other
---

<!-- <p><span itemscope itemtype="http://schema.org/Photograph"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/b/black_neon_tetra/20200105/20200105015826.png" alt="f:id:black_neon_tetra:20200105015826p:plain" title="f:id:black_neon_tetra:20200105015826p:plain" class="hatena-fotolife" itemprop="image"></span></p> -->

![](/assets/2020-01-05-atom_to_neovim/neovim.png)


<p>AtomからNeovimに乗り換えたお話です。</p>

<p>neovimというのはvimの派生で、操作とかはほぼ同じですがオリジナルのvimより早いらしいです。以下、ホントはneovimだけどvimって書きます。</p>

<p><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fneovim.io%2F" title="Home - Neovim" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="https://neovim.io/">neovim.io</a></cite></p>

<hr />

<p>Atomも十分良いエディタです。なんですけど、ちょっとだけ不満がありました。</p>

<ul>
<li>立ち上がりが遅い。

<ul>
<li>エディタは持ち主に似るんですねハハハ(は?)</li>
</ul>
</li>
<li>ターミナル、chrome、Atomとの画面奪い合い合戦が起きてしまう

<ul>
<li>争いはよくないですね</li>
</ul>
</li>
</ul>


<p>不満なんてほとんどなかったんですけど、vimが良さそうだったからvimを使い始めました。</p>

<ul>
<li>かっこいい

<ul>
<li>いいえ</li>
</ul>
</li>
<li>マウスは極力使いたくない

<ul>
<li>ねずみ年なのに</li>
</ul>
</li>
<li>ターミナルで完結

<ul>
<li>chromeとターミナルの争いのほうが穏やか</li>
</ul>
</li>
<li>慣れれば便利そう

<ul>
<li><code>d3w</code>って打てば、「削除(delete)」+「3」+「単語(word)」みたくなる</li>
</ul>
</li>
<li>軽い

<ul>
<li>やったー</li>
</ul>
</li>
<li>どのサーバーにもvimは入ってる

<ul>
<li>電通大のiedのPCには入ってないけど</li>
</ul>
</li>
</ul>


<p>vimに移行したはいいもののatomよりも不便になったら困ります。</p>

<p>ということで、atomにあった便利機能をvimで実現するために試してみたものを紹介します。</p>

<p>vimは触ったことがあるけれど普段は使ってないよ、みたいな人向けです。プラグインの入れ方とかは各自で調べてね。</p>

<h2>左側にファイルのツリーを表示</h2>

<p>素のvimだとこういう系の機能はほとんどありません。</p>

<p>NERDTreeというプラグインを入れたら表示できます。</p>

<p><a href="https://github.com/scrooloose/nerdtree">GitHub - preservim/nerdtree: A tree explorer plugin for vim.</a></p>

<p>NERDTree-git-pluginを入れるとファイルごとのgitのstatusも表示してくれます。</p>

<p><a href="https://github.com/Xuyuanp/nerdtree-git-plugin">GitHub - Xuyuanp/nerdtree-git-plugin: A plugin of NERDTree showing git status</a></p>

<p>これ入れるだけで随分それっぽくなります。</p>

<h2>タブ機能</h2>

<p>素のvimにありました。ちょっと設定を変えるとちょっと使いやすくなります。</p>

<p><a href="https://github.com/Xuyuanp/nerdtree-git-plugin">GitHub - Xuyuanp/nerdtree-git-plugin: A plugin of NERDTree showing git status</a></p>

<p>タブも使ってNERDTreeも使うなら、vim-nerdtree-tabも入れるといいかもです。</p>

<h2>ステータスバー(下のバー)の表示がいまいち</h2>

<p>設定を書き換えてもいいんでしょうけど、これを入れたら簡単にいい感じになりました。</p>

<p><a href="https://github.com/itchyny/lightline.vim">GitHub - itchyny/lightline.vim: A light and configurable statusline/tabline plugin for Vim</a></p>

<p>文字コード、カーソル位置、現在のモードやgitのブランチとかを表示してくれます。</p>

<p>vimに限らずターミナルとかで新幹線や鉛筆みたいな表示をたまに見かけるんですけど、あれちょっと派手すぎな気がしませんか。このくらいが丁度いいです。</p>

<h2>色がいまいち</h2>

<p>カラースキームを設定しましょう。icebergというテーマが好きです</p>

<p><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fgithub.com%2Fcocopon%2Ficeberg.vim" title="cocopon/iceberg.vim" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="https://github.com/cocopon/iceberg.vim">github.com</a></cite></p>

<p>脱線なんですけど、このテーマを作った方(cocoponさん)のこの記事が面白かったです。</p>

<p><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fcocopon.me%2Fblog%2F2018%2F09%2Fmy-favorite-things" title="制約によって生じる本質の結晶 - ここぽんのーと" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="https://cocopon.me/blog/2018/09/my-favorite-things">cocopon.me</a></cite></p>

<p>アクアリウムレイアウトとかはどうなんでしょう。水槽内という制限はありますが、コンテスト上位作品は巨大水槽しかないので微妙な気がします。</p>

<h2>ファイル横断検索</h2>

<p>今いるファイル内の単語検索はできるんです。正規表現も使えますし。</p>

<p>今いるディレクトリ内の全ファイルから単語を探したい時もたまにあります。Atomだと簡単にできるんですけど、vim-fugitiveを入れるとvimでもできるようになります。</p>

<p>(追記: 素のvimにもありました)</p>

<p><a href="https://github.com/tpope/vim-fugitive">GitHub - tpope/vim-fugitive: fugitive.vim: A Git wrapper so awesome, it should be illegal</a></p>

<h2>PDFを見る</h2>

<p>vimでは多分見れません。chromeで見てます。</p>

<h2>マルチカーソル</h2>

<p>Atomではコマンドキーを押しながらクリックするとカーソルが増えます。
vimでもできるようにするプラグインがあるんですけど全然使いこなしてません</p>

<p><a href="https://github.com/terryma/vim-multiple-cursors">GitHub - terryma/vim-multiple-cursors: True Sublime Text style multiple selections for Vim</a></p>

<h2>コメントアウトのショートカット</h2>

<p>nerdcommenterを入れると拡張子に応じていい感じにコメントアウトしてくれます。</p>

<p><a href="https://github.com/preservim/nerdcommenter">GitHub - preservim/nerdcommenter: Vim plugin for intensely nerdy commenting powers</a></p>

<h2>独自のキーバインド</h2>

<p>これはむしろ逆かもしれません。</p>

<p>vimにはキーバインド設定ができるしほとんどの人がしてると思うんですけど、atomにもあります。</p>

<h2>コード整形</h2>

<p>Ruby書く時の話です。</p>

<p>rubocopというRubyのライブラリ(gem)がありまして、コードの良くない点を指摘してくれます。</p>

<p>まずはrubocopというgemをシステムにインストールしましょう。</p>

<p>次に、vim-rubocopと、aleをvimに入れて終わりです。コードを指摘されましょう。</p>

<p><a href="https://github.com/ngmy/vim-rubocop">GitHub - ngmy/vim-rubocop: The Vim RuboCop plugin runs RuboCop and displays the results in Vim</a></p>

<p><a href="https://github.com/dense-analysis/ale">GitHub - dense-analysis/ale: Check syntax in Vim asynchronously and fix files, with Language Server Protocol (LSP) support</a></p>

<p><a href="https://hoshinotsuyoshi.com/post/neovim_rubocop_autocorrect/">&#x26A1;neovim + &#x1F37B;ale + &#x1F693;rubocop &middot; hoshinotsuyoshi.com - &#x81EA;&#x7531;&#x306A;&#x30D6;&#x30ED;&#x30B0;&#x3060;&#x3088;</a></p>

<h2>補完</h2>

<p>変数の補完は素のvimにも入っています。</p>

<p>コードの補完は、atomの時はrsenseというgemを使った方法でしていました。</p>

<p>vimでは、deopleteという汎用補完プラグインと、deoplete-rubyを入れて使っています。</p>

<p><a href="https://github.com/Shougo/deoplete.nvim">GitHub - Shougo/deoplete.nvim: Dark powered asynchronous completion framework for neovim/Vim8</a></p>

<p><a href="https://github.com/ishbullet/deoplete-ruby">https://github.com/ishbullet/deoplete-ruby</a></p>

<p>他の補完できる言語ついてはここにまとまっています。
<a href="https://github.com/Shougo/deoplete.nvim/wiki/Completion-Sources">Completion Sources &middot; Shougo/deoplete.nvim Wiki &middot; GitHub</a></p>

<p>deopleteの作者さん ( Shougoさん ( <ruby><rb>暗黒美無王</rb><rp>（</rp><rt>dark vim master</rt><rp>）</rp></ruby>さん ) ) ですが、この方neovim自体の作者さんで、日本の方です。
いくつかプレゼンのスライドが上がっていてどれも面白かったです。</p>

<p><iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.slideshare.net%2FShougo" title="Shougo" class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;"></iframe><cite class="hatena-citation"><a href="https://www.slideshare.net/Shougo">www.slideshare.net</a></cite></p>

<hr />

<p>以上、atomからneovimに移行した記事でした〜</p>

---
layout: default
title:  "tempfileを使えば標準入出力に対応していないターミナルコマンドを副作用を抑えて関数化できる"

---


タイトルながー

タイトルで完結してますので記事読まなくても大丈夫です

えっと、どういうことかというとですね、たとえばpdfファイルを結合する、pdfuniteというコマンドがあります。

```bash
pdfunite hoge.pdf fuga.pdf hogefuga.pdf
# hoge.pdfとfuga.pdfを結合したものをhogefuga.pdfに書き出す
```

何度も実行するので、Ruby経由で実行したくなります(Rubyが好きなので)。pdfuniteメソッドを作ります。

```ruby
hoge = File.open('hoge.pdf', &:read)
fuga = File.open('fuga.pdf', &:read)
hogefuga = pdfunite(hoge, fuga)
```

このpdfuniteメソッドは次のような仕様だと嬉しいです。

- ファイルの中身を引数に受け取る
- 結合後のファイルの中身を返す

中身じゃなくてファイルのパスを渡せばいいじゃんと思うかもしれません。パスを渡す仕様ならば作るのは簡単です。

```ruby
def pdfunite(path1, path2)
  output_path = path1.gsub('.pdf', '') + path2
  `pdfunite #{path1} #{path2} #{output_path}`
  File.open(output_path, &:read)
end
```

こんな感じでしょうか。

ですが、これはあまり良い方法ではありません。引数がファイルのパスだからです。

渡されたパスとそのファイルの中身は別物なので、メソッドの返り値が引数以外の事柄に依存しています。

返り値が引数以外の状態に影響されるのは使いにくいです。副作用とか言われているやつです。

というわけで、パスを受け取るのはやめましょう。中身を受け取ります。

実行したいコマンドが標準入出力に対応していれば少し楽で、IO.popen を使うと、コマンドと標準入出力をやりとりできます。
[IO.popen (Ruby 2.7.0 リファレンスマニュアル)](https://docs.ruby-lang.org/ja/2.7.0/method/IO/s/popen.html)

標準入出力に非対応のコマンドのときはどうしましょう。

中身を受け取って、一旦ファイルに書き出せば良いのです。
OSの機能にtmpfileというものがあり、一時的なファイルが作れます。
これを使って、

1. tmpfileを1つ作って1つ目の引数を書き出す
1. tmpfileをもう1つ作って2つ目の引数を書き出す
1. tmpfileをもう1つ作る。空のまま
1. pdfuniteコマンドを実行
1. 出来たpdfファイルを読み込んで、中身を返す

と処理すればOKです。

```ruby
reqiure "tempfile"
def pdfunite(file1, file2)
  Tempfile.open do |f1|
    f1.puts(file1)
    Tempfile.open do |f2|
      f2.puts(file2)
      Tempfile.open do |f3|
        system("pdfunite #{f1.path} #{f2.path} #{f3.path}")
        f3.read
      end
    end
  end
end
```

ネストが深いですが、メソッドに切り出せました。

Rubyに限らず、どの言語でも出来るはずです。

ファイルの書き出し読み出しが多分重い処理になってしまうのですが、もっと良い方法はあるのでしょうか。わかりません。

以上、Rubyから標準入出力に対応していないターミナルコマンドを副作用を抑えてメソッドにする方法、でした。

---
layout: default
title:  "SPECシリーズをほぼ見た話と脱線"

---

(タイトルの通り、後半はSPEC関係ないです。それでも読むよという方はぜひ)

久しぶりに文章を書く気分になりました。レポートからの現実逃避かもしれません。

7月頃に「SPEC〜警視庁公安部公安第五課 未詳事件特別対策係事件簿〜」というドラマ(と映画)を見まして、その紹介です。

スペックと呼ばれる特殊能力を利用した犯罪を暴く刑事モノ、という説明でよいのかわかりませんが、そんな感じのドラマです。

映画「トリック」と同じ監督で、言い回しや雰囲気など、あの映画とノリが近いです。

AmazonPrimeVideoで配信していて、紆余曲折あって見始めました。
Amazonの学生プライム会員には既に入っていて、
PrimeVideoなるサービスがあることも知っていたのですが、
特に見たいものも無いという理由で全く利用していませんでした。
6月頃、アイドルマスターシンデレラガールズのアニメを久々に見返したくなり、
そういえばPrimeVideoなるサービスがあったな、
アニメを見ような、見終わったな、
映画Trickも配信しているじゃん(多分昔金曜ロードショーとかで見たから記憶がある)、見よう(「トリック劇場版 ラストステージ」)。
見終わった。ん、スペックも配信しているな(これも見た記憶あり)。
調べてみるとあの時見たのはどうやら映画版らしい。

- ドラマ12話あって(SPEC 甲〜癸(起))、
- ちょい長めの特別ドラマがあって(SPEC 翔)、
- 映画1と(SPEC 天)
- 映画2(SPEC 結)があるらしい。

前日譚のドラマやスピンオフもあるらしい。
あのとき見たのは映画1と映画2だったのか。
見たのいつだっけ。2年前? もっと前にも見てた気もするけど思い出せんな。
確かに映画見た時ちょっとストーリーについていけなかった気もする。
でも面白かった覚えはあるな、最近やりたいことないしな、見てみようかな。
という次第です。

初期のドラマ編は謎解き寄りで、後半につれて超能力のアクションシーンが多く、話のスケールも大きくなります。
人間ドラマ的なのはシリーズ通して描かれていています。
感受性とかの乏しさが露呈しそうなのでコメントは控えます。とりあえず良かったことだけ伝えておきます。
シリーズ通してシュールな笑いが散りばめられていて、これが癖のある良い雰囲気を出していて好きです。

というわけでSPECシリーズの感想でした。

---

課題が一瞬で終わるSPECが欲しい。いや上手い文章書くSPECも欲しい。

それにしても何かを紹介する文は難しい.. わかりやすく、そして限られた字数で紹介して、その後に書く感想を読者に届かせる基盤も築かねばならない(?)

文章上手い人どう書いているんだろう。
上手い人のブログ見てみよう。
わからんな、上手いのはわかるけどなぜうまいかはわからない。謎です。

話がそれますけど、最近こういった、文章力みたいな普通のスキルとかをまともなレベルにしたいという気持ちがあるんですよね。
文章力、健康、会話、英語、、、
だからといってなにかしているわけでもないのですが。若い内にはどうにかしたいな程度。

それと、自分の行動指針や価値観を固定させたい気持ちも強いです。
たとえば仕事。どんな意識で仕事を捉えるのが一番幸せなのかとか。

あとは、主に精神的に安定させるにはどうすれば、みたいなことも考えています。多分これが一番多い。
無気力になったときにどう立ち直るか、そもそもどう予防するか、どう計画してどういう意識や環境にすれば計画倒れしないかとか。

計画についてはあれですね、人の気持ちに依存しない方法があればいいなと思っています。

たとえば、なにか予定を立てる時に、課題の消化や本を読む予定も入れますよね。
そういうのはやっぱりモチベーションが必要じゃないですか。
でもモチベーションを頼りに行動するのをどうにかしたいんですよね。一種の自動化?

計画を立てるとき、立てた予定を実行しやすくなるような環境を整えるとか、そういう方法まで確立したいんです。
これをやったらこのご褒美、定期的にこれをすることでモチベーションの補給、くらいまで考えて、モチベーションまで管理したい。

こういうのは数年前から細々とずっと考えていて、年々、少しずつですがコントロールが上手くなっている気もします。

ただ、昔は気力の要る行動、プログラミングや課題とかを、プレッシャー駆動で、少し大げさですがやらないとヤバいみたいな気持ちでこなしていた気もしています。
負のモチベーション的な。闇のモチベーションかも。

光のモチベーション、精神負担のかからない好奇心駆動のモチベーションの作り方はココ最近上手くなったのですが、
環境の変化もありプレッシャー駆動が全然無くなっていて、結果頑張ることも減っています。
もう少しそこらへんのコントロール上手くなりたいですね。

つらつらと書いていたら話が随分飛んでしまった。
ドラマSPECは面白いのでおすすめです。

---
layout: default
title:  "for文の雑感"

---

おー プログラミングの記事〜

for文、是非が分かれると思うんですよ。
Rubyにはfor文、あるにはあるんですけど、全く使われていないです。
eachメソッドがありますので。

じゃあfor文は無くても良いのか? みたいな事を考えていました。

(↑Rubyではfor文ではなくfor式ですが)
(eachと比べてスコープを作らない、という違いはありますが)

あと繰り返しのネスト減らす方法とかも考えていました。

## for文のメリットデメリット

Rubyのeachみたいに、高階関数で、関数引数をとって繰り返すメソッドがあればfor文は要らないのでしょうか?
(一応、ここでのfor文は拡張for文. `for a in arr`みたいな方です)

### メリット
for文があれば、その内側にかかれている処理は絶対に繰り返しのための処理と、構文からわかります。

Rubyだと、`arr.piyo{|a| ~ }`と書かれていると、ブロックの処理がeach的な処理なのかmap的な処理なのかが、構文上からは分かりません。
`each_cons`は繰り返しで使われそうですが`select`を繰り返し処理には使わないですよね? でも構文からはわかりません。

Pythonだと、`for a in arr.piyo():`って書いてあれば、その内側は絶対に繰り返し用の処理とわかります。
逆に、for文を使わず、関数を引数に受け取っていれば、その関数引数は繰り返し用 **ではない** ことがわかります

### デメリット
デメリットという言い方は不自然ですが、forキーワードをわざわざ消費していることにモヤモヤが残ります。

もうひとつ、関数を引数とする処理は別に「繰り返し(each)」と「変形(map)」だけではありません。
「フック」とかもあります。

`at_exit{~}`とか`before_update{~}`とか、〇〇したとき呼び出して欲しいみたいなときも関数を渡していますね。

「繰り返し」「変形」「フック」... のうち、「繰り返し」だけが特別にforキーワードをもらっていて不平等感がちょっとあります。

## 繰り返し処理のネストを減らそう

話は変わって、繰り返し処理のネストを減らすコツです。

内側と外側が独立しているなら、直積をとりましょう。
縦800横600の画像の走査みたいなのは, `[*1..600].product([*1..800])`で1ネストで書けます。

内側が外側の影響を受けているときは、遅延評価を使いましょう。
具体的には、月からその月の日数を取る、のようなときです。
普通に`map`で1重ループに直すと、実行順序が変わってしまいます。
2重ループは深さ優先的だったのが、1重ループ2回は幅優先的になってしまします。
そこで、遅延評価の`lazy.map`を使うことで、1重でも深さ優先探索的になってハッピーという話でした。

---

scrapboxに書いたのを文章に直したら変になってしまった。

その道のプロはループとか使わずに全部再帰で書いたりするんですかね。


---
layout: default
title:  "今までの趣味について雑感"
tags: 振り返り

---

今までの趣味を列挙して、共通点を探そうのコーナーです。

まずは今までの趣味を雑に紹介。

- 伊坂幸太郎の小説
  - 11~16歳頃までハマっていました
  - 小説を何度も読んで、インタビュー記事も読んでいたくらいにファンでした
- 洞窟物語(ゲーム)
  - 10~14歳頃
  - 何周もして、非公式派生版とかもプレイして、作者のブログ記事とか読んでいたのでけっこう好きだったはずです
- 水槽
  - 15~17歳頃
  - お祭りで飼い始めた金魚がきっかけだったのですが、水草水槽の道へ進みました。熱中していた頃は割と毎日、水草の本を読んだりレイアウトを考えたりしていました
- プログラミング
  - 16歳~
  - 大学入って、アルバイトを初めてから急激にのめり込みました
- アイマス
  - 16歳~
  - 気づいたらもう何年
- 電通大生のブログ購読
  - 16歳~
  - 登録したブログの更新を欠かさずチェックしていました。1年半くらい

共通点はなんですかね。色々考えてみました。こじつけがましいのもあります。

- 大きいものに惹かれがち?
  - アイマス
  - 電通大生のブログ購読
  - プログラミング

プログラミングはちょっと違うかも。
アイマスはシリーズと量の膨大さに、
ブログ購読では同じ大学でも色々な人がいるという感覚が、好きでした。
だだ自分、大きいものを追うのに疲れがちなところがあって、そこが難しいです。

アイマスには5シリーズあって、歴史も長く、新しいコンテンツが供給される量もスピードも莫大です。
ある程度追うのを絞っても、新しいのを追うだけじゃないんです。
例えば、アイマスの曲は全部追っていたのですが、新曲を、つまりは増分を追うだけじゃないですよね。
過去今までの曲を、つまりは累積分も聞くわけです。何度も聞きたいですし。
1度聞いた曲も、半年もしたら印象薄れますよね? でもアイマス曲は1000曲近くあるわけです。
そうすると、過去分をキープしつつ新しいのを追うのが負担になってくるわけです。

電通大生のブログ購読も同じ理由でした。新規エントリと過去エントリを両方追って把握するのがキツくなっていたんですね。

プログラミングはどうでしょう。今の所はそういった負担は感じていないです。
最新技術は毎年のように現れるとはいえ、ベースとなるコンピューターサイエンスを抑えておけば大丈夫だと思っているところがあります。
コンピューターサイエンスの基礎基本は今後変わることはほぼ無いはずですし、抑えておきたいのも大学学部レベルの基礎基本のみです。
いや、興味のある分野はもっと知りたいかも。
そういう思いもあり、プログラミングに関してはあまり追うことの負担は感じていないです。

- 限られたものを存分に楽しんでたもの
  - 洞窟物語
  - 伊坂幸太郎
  - 水槽

何周もしたり、同じことを何度もしていたのがこれらです。
得られるものは全部追うくらいの勢いで、さっき紹介した趣味とは逆の姿勢でした。
新規の供給が少ない(or無い)ジャンルの趣味でした。
限られていたから好きになったわけではなく、好きになった趣味が偶然そんなジャンルだった、という感じですね。
どれも自然に遠ざかってしまいました。

- ものづくり系?
  - プログラミング
  - 水槽

もしかしたら創作という共通点があるかもしれません。
でも創作にはエネルギーがいりますし..
アウトプットよりインプットの方が好きです。

- 心に訴える系?
  - 伊坂幸太郎
  - アイマス

アイマスはちょっと違うかも、とか言ったら怒られそうですね。
そもそもあまり心に訴える系、感動系に惹かれにくい性格ですし。
感動ではないですが、雰囲気が好きなのはあるかもしれません。
伊坂幸太郎の物語の小気味よい雰囲気とか、人物同士の掛け合いとかが好きなのかもしれません。
アイマスも、キャラ同士のやりとりが好きです。

- 達成感
  - 洞窟物語
  - プログラミング

段々投げやりになってきました。
ゲームやプログラミングに限らずどの趣味でもあてはまりそうです。
さっき話した完璧主義気味な性格や全貌把握したいがちな性格につながる所があるかもです。

- 自分の身になる感覚や役立つ感覚?
  - 伊坂幸太郎
  - プログラミング
  - 電通大生のブログ購読

そうですね、多分これもあります。伊坂幸太郎の小説には、生き方の指針的なものが会話とかに練り込まれていて、それも好きでした。
書いていたら伊坂幸太郎の小説が読み返したくなってきました。引っ越しのとき全部処分しちゃったんですよね。また買おうかな。記事はこれで以上です。

---

(追記)

これ書いた次の日に、思い立って図書館に行って、伊坂幸太郎の小説「サブマリン」を読みました。

感想はツイートから引用

https://twitter.com/tetetratra/status/1295735441363107842

> 伊坂幸太郎のサブマリン。少年犯罪を主に担当している家庭裁判所調査官と、その周りの人たちの話。白黒つけられないことや、やるせない気持ちになることはあっても、少しでも全体が幸せな、報われる方へ向いて欲しいよね、という雰囲気で書かれていた。
> 読み進めたくなるような展開や書かれ方はあまりされていなくて、扱っている内容も重めなのだけど、登場人物やストーリーの空気感が良くて、自然にページが進むくらいに良かったです。
>
> 3年ぶり2度目の再読なのだけど話全然覚えてなかった

サブマリンが出版された辺りですね、熱が収まってきた時期。
一読だけしていたようです。

「少しでも全体が幸せな、報われる方へ」という雰囲気は伊坂幸太郎の小説全般にあった気がします(インタビューとかで語っていたかも)。
しらずしらずのうちにこの考え方に影響を受けて今の性格があるのかも、とちょっと感じています。

---
layout: post
title:  "文章が脱線する"
date:   2021-04-08 0:0:0 +0900
tags:   雑記
---

*この文章はたびだび脱線しますし脱線後も元の場所には戻ってきません*

---

文章書いてもどうせ脱線するし、それなら最初から脱線しますよと宣言しておけば、どれだけ脱線してもいいかと思いました。

文章を脱線させまくればそれがアイデンティになるかもしれない。芸になるかもしれません。脱線芸です。

「脱線芸」は「キレ芸」とか、そういうやつと同じくくりのやつです。キレ芸よりはだいぶまし。

「お家芸」は、普段の生活でけっこう使いたい言葉ですね。

「十八番」もいいですけれど、個人的には「お家芸」のほうが、語感が好きですね。

...いやそもそも意味がちょっと違うかもしれない。まいいや。

こういう単語がスラっと出てくる人、憧れます。

文章はもちろん、会話なんかで使われた日には、驚きのあまり話が頭に入ってきません。

一年弱ほど前、当時働いていた会社のある人がなにかの会話で、「いやー お家芸になってますね」って自然に言っていて、そのときの記憶がずっとあります。
なんの会話かは忘れました。

語彙といえば、若い頃、国語をもっと真面目にやっていればよかったです。
語彙もそうですが、読解力が欲しいです。

というのも、ここ半年くらいアイドルマスターシャイニーカラーズにお熱なんですけど、
ゲーム内の重々しかったり意味深なコミュを読んで、noteでそのコミュについて、いわゆる怪文書を検索するんですけど、
文章が上手いものそうですけど、解釈がすごいんですよね。

なるほどこれはこういうことなのか、あれはああいうことなのか、すごいな、やばいな、って、読んでいて感嘆しぱなっしです。

最初の頃は、どんな思いでいるのだろう、とかを想像しながらやっていたのですが、最近は雑に読みがちで、反省です。

はい。

文章が上手い、で思い出したんですけど、日本語矯正サイトっていうのが、そういえばあるらしいんですよ。

先々週くらいに読んだこの記事を今思い出しました。

[日本語エラーチェックサイトenno.jpで サポートしない機能がある理由（前編）｜TechRacho（テックラッチョ）〜エンジニアの「？」を「！」に〜｜BPS株式会社](https://techracho.bpsinc.jp/hachi8833/2021_03_12/104217)

あ、今読み返したらあれですね、上手い日本語に変換するのではなくて日本語のミスを直すサービスっぽいですね。

ちょっとやってみます。

...

|箇所|単語|校正|
|--|--|--|
|日本語矯正サイト|矯正 |【複数用法】変換ミスの起きやすい漢字です。 強制: 無理にでもさせること（強要） 矯正: 正しくすること 共生: 異なる生物や人が一方的または互いに結びついて一緒に生活すること|
|目的で、 techracho|【スペース】|句読点にスペースが接しています。|
|どうせ脱線するし|るし|【口語】口語的な表現です。フォーマルな文章では避けるほうがよい可能性があります。|
|こういう単語がスラっと|っ|【改善】これはカタカナの小さい「ッ」のつもりだった可能性があります。|
|サイトっていうのが|っ|【改善】これはカタカナの小さい「ッ」のつもりだった可能性があります。|

なるほど。

とりあえずはこのままで良さそうです。

...

最近の口癖というか、返答するときの言葉のNo.1が「なるほどです」で、No.2が「そうなんですね」です。滅茶苦茶たくさん言ってるので正直やめたいのですが、ほかにいい言葉も思いつきません。

報告とかで、発表終了しましたよ、の合図も、1位が「えっと、以上です。」で2位が「えーと、はい。」です。これもどうにかしたい。

昔会社で、社内向け記事のための新入社員インタビューみたいなのがあって、
そのときもやっぱり「....ですね。えー... はい。」で回答を終わらせてしまったのですが、
「『はい(シャットアウト)』ですか(笑)」みたいな返事をもらって、「ぁいえハハハ...」みたいな感じでした。
コミュ力トップレベルの人はこういうのを全く嫌味っぽくなくサラッと言えてすごいですね。何の話。

「ぁいえ...」で思い出したのが、シャニマスでプロデュースをしていて、一番共感することが多いのは風野灯織さんかもしれない、とこのあいだ思いました。

画面に表示されているテキストでは「いえ...」なんですけど、よく聞くと「ぁいえ...」なんですよね。わかります。すごくわかります。

話し方も考え方も、共感しがちです。

でもそう上手くはいかなくて、読んでいて、
今自分は共感している!、って思っていると、内なる自分が、本当に全力で打ち込む姿に共感するならばシャニマスはやめてプログラミングやれ! って言ってくるんですよね。
そんなこと考えているうちに、自動再生はどんどん進んでいって、肝心のコミュの中身が頭に入ってこないという...

プログラミングは、この前の土日で「アンダースタンディングコンピュテーション」を読んで、これは計算理論をRubyを使って入門している本なのですが、
一度諦めて積んでいたものを再挑戦して、難しい所は飛ばし飛ばし飛ばしで、一応は読み終えました。

結果、自分はプログラミング言語の理論的な面に滅茶苦茶興味があるわけではないみたいです。

「Rubyのウラガワ」という、Rubyの内部構造で使われているアルゴリズムやデータ構造を解説している雑誌の連載を、半月ほど前に読み終えましたが、
このときもやっぱり、プログラミング言語の実装的な面に滅茶苦茶興味があるわけではないな、と思ったんですよね。

理論もだめ、実装もだめとなると、じゃあ一体プログラミング言語の何がすきなんだという疑問が浮かびます。

たぶん、言語や技術のパラダイム的なものが好きな気がします。

今日、このpodcastを聞いて、再認識しました。

[fukabori.fm：Apple Podcast内の28. 技術選定の審美眼(1) w/ twada](https://podcasts.apple.com/jp/podcast/28-%E6%8A%80%E8%A1%93%E9%81%B8%E5%AE%9A%E3%81%AE%E5%AF%A9%E7%BE%8E%E7%9C%BC-1-w-twada/id1388826609?i=1000468518436)

...

ここまで書いて、読み返して思ったのが、話題が急に脱線すると下手な文章に見えますね。説明不足だったりするのも良くないです。脱線芸を名乗るにはほど遠いですね。

もっと上手く脱線したい。脱線したと思いきや元の路線に帰ってくるような文章、書けないかな、書けません。

どこかで、文章上達のコツはとにかく書くことだと読んだのですが、こんな文章を永遠に書いていても上手くなるのか、甚だ疑問です。

えっと、はい。以上です。

---
layout: post
title:  "筆が乗る条件が全然分からない"
date:   2021-06-23 0:0:0 +0900
tags:   雑記
---

文章、すらすらと書けるようになりたい。

書き出しはさりげなく、それでいてどこか惹かれるような。

共感を誘う、それでいて独特な視点から。

その感性から紡がれる言葉には知性が垣間見えるような。

そして最後は鮮やかな伏線回収と共に微笑を誘う結びで締めくくる。そんな文章を...

...

こんな書き出しをしたせいで以降の文章のハードルが無限に上がってしまった。下げます。グググググ... (ハードルを下げる音)

短いとはいえ、拙いとはいえ、稀にある調子がよい時は文章、そこそこ書けると思う。速筆とは程遠いけど。

あ、速筆、そくひつって読むんだ。ずっとそっぴつだと思ってた。それはさておき。

どちらかというと、書く内容を決めていないで書き始めた方がよく書ける気がする。
軽い脱線を挟みつつ、特に目的地もなく進んでいくような。

最近になってようやく、気負わない方がよく書けるかな、くらいの筆乗り因子は分かってきたのだけれども、逆にそれくらいしか筆が乗る条件が分からない。

筆が乗るような環境を整えてカタカタと、筆もといカーソルを進めたいものだけれども、その環境が何なのか全然分からない。

他には何があるだろう。強いて言えばスマホのメモ帳で書いているとき、もそうかも。若干執筆が捗る気がする。
スマホのIMEだとあまり早く入力できないことが良いのかもしれない。そうなるとカタカタじゃなてペタペタですね。

思考のスピードでコードを編集するのに向いているエディタはVimですが(参考：｢実践Vim 思考のスピードで編集しよう!｣)、思考のスピードで気持ちの吐露を(トロトロと)するの向いているのはスマホのメモ帳ということなのでしょう。

でもスマホで文字を打つと、疲れるというのが悩ましい。このくらいまで書いているともう指が疲れる。

指の疲れはそりゃそうにせよ、このくらいまで書くともう書くのにも疲れてきてしまって、そこはもうちょっと鍛えたい。
すぐに疲れるから文章をこのくらいまで書くと、このあとどうやって終わらせようか気にし始めてしまう。

気負わずに書いているとはいえやっぱりなんか良さげな終わらせ方をしたい。

満点のオチは求めてないけれど70点のオチくらいにはしたいよね。
一見脈略なく話を進める傍らで、内心ではそんなことを考えつつ話の落とし所を探り始めるのがこのくらいの文量。
散歩の終盤、帰路から外れる方角は避けて道を選ぶ心理と似ている。

散歩はあれですよね、帰りはどうしたって見慣れた道を歩くことになるじゃないですか。途中までは少し遠くてもまわり道もできるわけですが、家の前の道とかはどうやっても避けられない。

あれ、そういう意味では似てなかったかもですね。文章の終着点は別に決まっていないので。じゃあさっき話した理屈は何だったんだ。

ええと、筆が乗る環境についての話でしたよね。軽い運動と外出は良さそうです。

他には、これはちょっと違いますが、極度に鬱状態のときは逆に書けるというか、取り憑かれたかのようにそのときの心情を文字に起こしがちです。ですけどそれはダメですよね。

弱ったメンタルを立て直す頼みの綱に、軽い運動を兼ねた外出がありますが、これは書きものが捗る条件と一致していますね。

となると美味しいものを食べたりも効果的だったりするだろうか。

美味しいもの。普段自宅でテキトーに食事を済ませていても食に対する不満は特に無いけれど、この前実家に帰ったら自宅での食事がお粗末なことに気付かされました。
実家でご飯を食べながら、なるほどこういう調理もあるのか、帰ったらやってみようと思うわけですが、まあそういうのは大抵やらずじまいになりますよね。
あー、ご飯の話をしていたらもうちょっと何か食べたくなってきた。

グググググ... (お腹の音)

決して派手ではないけれど、各々が互いの色を引き立たせるキャベツ人参そしてピーマンの彩り。

食欲を誘う唐辛子の香りに身を任せ、ひと口。

豪快で、それでいて不思議とヘビーではない。

辛さの中に確かに感じられる素材の旨みは食べた者を至福の世界にいざなう。

坦々麺を、食べました。

